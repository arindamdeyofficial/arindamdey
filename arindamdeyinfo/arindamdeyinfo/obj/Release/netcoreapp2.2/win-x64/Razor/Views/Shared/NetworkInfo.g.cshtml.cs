#pragma checksum "C:\Files\arindamdeyinfo\arindamdey\arindamdeyinfo\arindamdeyinfo\Views\Shared\NetworkInfo.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b8643a7c41f203c33b28a001e71e59709595357c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared_NetworkInfo), @"mvc.1.0.view", @"/Views/Shared/NetworkInfo.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Shared/NetworkInfo.cshtml", typeof(AspNetCore.Views_Shared_NetworkInfo))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Files\arindamdeyinfo\arindamdey\arindamdeyinfo\arindamdeyinfo\Views\_ViewImports.cshtml"
using ArindamdeyInfo;

#line default
#line hidden
#line 2 "C:\Files\arindamdeyinfo\arindamdey\arindamdeyinfo\arindamdeyinfo\Views\_ViewImports.cshtml"
using ArindamdeyInfo.Models;

#line default
#line hidden
#line 1 "C:\Files\arindamdeyinfo\arindamdey\arindamdeyinfo\arindamdeyinfo\Views\Shared\NetworkInfo.cshtml"
using HelperManagers;

#line default
#line hidden
#line 2 "C:\Files\arindamdeyinfo\arindamdey\arindamdeyinfo\arindamdeyinfo\Views\Shared\NetworkInfo.cshtml"
using Helper;

#line default
#line hidden
#line 3 "C:\Files\arindamdeyinfo\arindamdey\arindamdeyinfo\arindamdeyinfo\Views\Shared\NetworkInfo.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b8643a7c41f203c33b28a001e71e59709595357c", @"/Views/Shared/NetworkInfo.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1cb0698455cd05b006d44087d3d72dfccdfcab26", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared_NetworkInfo : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 4 "C:\Files\arindamdeyinfo\arindamdey\arindamdeyinfo\arindamdeyinfo\Views\Shared\NetworkInfo.cshtml"
  
    Layout = null;

#line default
#line hidden
            BeginContext(99, 4163, true);
            WriteLiteral(@"<h1 id=list>-</h1>
<ul>
    <li id=""localIp"">
        Network.GetActiveIP : 
    </li>
    <li>
        Network.GetPublicIpAddress : 
        ConnectionManager.IpAddressPublic :
    </li>
    <li>
        Network.GetActiveMACAddress(): 
        ConnectionManager.MacAddress :
    </li>
    <li>
        Network.GetActiveGateway() : 
    </li>
</ul>
<script>
    var localIp, publicIp, city, region, country, loc, org;
    $(function () {
        $.ajax({
            url: 'https://ipinfo.io/json?token=95f222df798ba2',
            method: 'GET',
            success: function (data, textStatus, jqXHR) {
                //{
                //  ""ip"": ""49.213.19.72"",
                //  ""city"": ""Singapore"",
                //  ""region"": ""Central Singapore Community Development Council"",
                //  ""country"": ""SG"",
                //  ""loc"": ""1.2931,103.8560"",
                //   ""org"": ""AS24482 SG.GS""
                //}
                if (data != null) {
                    ");
            WriteLiteral(@"publicIp = data.ip;
                    city = data.city;
                    region = data.region;
                    country = data.country;
                    loc = data.loc;
                    org = data.org;
                }                
            },
            error: function (error, status, jqXHR) {
                
            }
        });

        //Local ip
        // NOTE: window.RTCPeerConnection is ""not a constructor"" in FF22/23
        var RTCPeerConnection = /*window.RTCPeerConnection ||*/ window.webkitRTCPeerConnection || window.mozRTCPeerConnection;

        if (RTCPeerConnection) (function () {
            var rtc = new RTCPeerConnection({ iceServers: [] });
            if (1 || window.mozRTCPeerConnection) {      // FF [and now Chrome!] needs a channel/stream to proceed
                rtc.createDataChannel('', { reliable: false });
            };

            rtc.onicecandidate = function (evt) {
                // convert the candidate to SDP so we can r");
            WriteLiteral(@"un it through our general parser
                // see https://twitter.com/lancestout/status/525796175425720320 for details
                if (evt.candidate) grepSDP(""a="" + evt.candidate.candidate);
            };
            rtc.createOffer(function (offerDesc) {
                grepSDP(offerDesc.sdp);
                rtc.setLocalDescription(offerDesc);
            }, function (e) { console.warn(""offer failed"", e); });


            var addrs = Object.create(null);
            addrs[""0.0.0.0""] = false;
            function updateDisplay(newAddr) {
                if (newAddr in addrs) return;
                else addrs[newAddr] = true;
                var displayAddrs = Object.keys(addrs).filter(function (k) { return addrs[k]; });
                localIp = displayAddrs.join("" or perhaps "") || ""n/a"";
                $('#localIp').html(localIp);
            }

            function grepSDP(sdp) {
                var hosts = [];
                sdp.split('\r\n').forEach(function (line) { ");
            WriteLiteral(@"// c.f. http://tools.ietf.org/html/rfc4566#page-39
                    if (~line.indexOf(""a=candidate"")) {     // http://tools.ietf.org/html/rfc4566#section-5.13
                        var parts = line.split(' '),        // http://tools.ietf.org/html/rfc5245#section-15.1
                            addr = parts[4],
                            type = parts[7];
                        if (type === 'host') updateDisplay(addr);
                    } else if (~line.indexOf(""c="")) {       // http://tools.ietf.org/html/rfc4566#section-5.7
                        var parts = line.split(' '),
                            addr = parts[2];
                        updateDisplay(addr);
                    }
                });
            }
        })();
        else {
            $('#localIp').html(""<code>ifconfig | grep inet | grep -v inet6 | cut -d\"" \"" -f2 | tail -n1</code>"");
            //document.getElementById('list').nextSibling.textContent = ""In Chrome and Firefox your IP should display automatic");
            WriteLiteral("ally, by the power of WebRTCskull.\";\r\n        }\r\n    });\r\n</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
